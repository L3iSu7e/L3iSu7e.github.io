<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>D3CTF 2023 RE Writeup</title>
    <link href="/2024/01/04/D3CTF2023/"/>
    <url>/2024/01/04/D3CTF2023/</url>
    
    <content type="html"><![CDATA[<p>D3CTF 2023 Reverse 题解</p><span id="more"></span><h1 id="d3RC4"><a href="#d3RC4" class="headerlink" title="d3RC4"></a>d3RC4</h1><h2 id="涉及知识"><a href="#涉及知识" class="headerlink" title="涉及知识"></a>涉及知识</h2><ul><li>子进程调试</li><li>RC4</li><li>管道读写</li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>通过对比算法，得到 <code>main</code> 函数的内容</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> a1, <span class="hljs-type">char</span> **a2, <span class="hljs-type">char</span> **a3)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span><br>  <span class="hljs-type">int</span> j; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span><br><br>  <span class="hljs-built_in">pipe</span>(pipedes);<br>  __isoc99_scanf(&amp;format, input);<br>  input_len = <span class="hljs-built_in">strlen</span>(input);<br>  <span class="hljs-built_in">RC4_init</span>(::a1);<br>  <span class="hljs-built_in">RC4_init0</span>(::a1, ::a2, ::a3);<br>  <span class="hljs-built_in">RC4_crypt</span>(::a1, input_len, xor_data);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; input_len; ++i )<br>    input[i] ^= xor_data[i];<br>  <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; j &lt; input_len; ++j )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( input[j] != cmp_data_0[j] )<br>      <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>实际调试过程中，发现<code>main</code> 函数执行之后，又会执行其他函数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">_init_array和_fini_array中的函数分别会在main函数之前和之后被调用执行。<br><br>_init_array里sub_1A20函数做了一些变量的初始化和字符串的解密。<br><br>_fini_array里sub_16C5函数是题目主要逻辑<br></code></pre></td></tr></table></figure><p>函数 <code>sub_16c5</code> 里面用了子进程进行了最后的加密和检验<br><img src="/./img/D3CTF/5d788b5cf59d6c3814bb4ca62c4794abca5db47b.png"><br>如果只看加密操作，那基本就全是 Xor 操作</p><h2 id="调试子进程求解"><a href="#调试子进程求解" class="headerlink" title="调试子进程求解"></a>调试子进程求解</h2><p>因为加密的操作基本都是固定值加密，所以可以尝试提取数据，然后进行异或还原<br>这里的难点就是进行子进程调试。</p><p>详细记录一下子进程调试的过程 首先，在第一个 fork 函数处打上断点<br><img src="/./img/D3CTF/4c04f0f218d655ec31353021eecd8ff3ee3a0b53.png"><br>断下来之后，在子进程第一个代码块上patch 一个死循环<br><img src="/./img/D3CTF/0deb3b8a49095d463f992f049e4dd7b17f83f5e5.png"> 将<br><code>call RC4_init0</code> patch 为 <code>jmp 0x55CBB4614875</code> ，即始终跳转到第一条指令<br>反调试得到的代码也出现了 <code>while(1)</code><br><img src="/./img/D3CTF/efa65ad64b05c23d56a1d4bc0989cbf10a831ad7.png">\</p><p>然后直接 F9 ，让程序一直跑，此时<code>Debugger</code> -&gt; <code>Detach The process</code><br>然后在刚刚我们修改的地方打上断点，然后再 Attach 上进程<br><img src="/./img/D3CTF/7968cb33faa9136bb1c3d78fbb4a6d67ef9fa5ea.png"><br>断下来后，将指令改回去<br><img src="/./img/D3CTF/8e79b60ac31be42a0b6d97147c5ba53e4518266a.png"><br>此时就可以调试子进程了 提取出数据之后，逆向异或就可以得到 flag 了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iomanip&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LEN 36</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">de_xor</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> (&amp;arr)[LEN],<span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> (&amp;key)[LEN])</span></span>&#123;<br>    <span class="hljs-type">int</span> i,k;<br>    <span class="hljs-keyword">for</span>(i=LEN<span class="hljs-number">-2</span>; i&gt;=<span class="hljs-number">0</span>; i -= <span class="hljs-number">2</span>)&#123;<br>        arr[i+<span class="hljs-number">1</span>] = arr[i] - (key[i+<span class="hljs-number">1</span>] ^ arr[i+<span class="hljs-number">1</span>]);<br>        arr[i] = (arr[i] ^ key[i]) - arr[i+<span class="hljs-number">1</span>];<br>    &#125;<br><br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">en_xor</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> (&amp;arr)[LEN], <span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> (&amp;key)[LEN])</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>; j&lt;LEN; j += <span class="hljs-number">2</span>)&#123;<br>        arr[j] = (arr[j] + arr[j + <span class="hljs-number">1</span>]) ^ key[j];<br>        arr[j + <span class="hljs-number">1</span>] = key[j + <span class="hljs-number">1</span>] ^ (arr[j] - arr[j + <span class="hljs-number">1</span>]);<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">xor_de</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> (&amp;arr)[LEN], <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> (&amp;key)[LEN])</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt; LEN ; i++)&#123;<br>        arr[i] ^= key[i];<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">print_state</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* arr, <span class="hljs-type">int</span> len)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;len; i++)&#123;<br>        <span class="hljs-comment">// cout &lt;&lt; setfill(&#x27;0&#x27;) &lt;&lt; setw(2) &lt;&lt; hex &lt;&lt; (int)*(arr+i) &lt;&lt; &quot; &quot;;</span><br>        cout &lt;&lt; *(arr+i);<br>    &#125;<br>    cout &lt;&lt; endl;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> en_data[] = &#123;<span class="hljs-number">0x75</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x83</span>&#125;;<br>    <span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> key[] = &#123;<span class="hljs-number">0x35</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xD3</span>&#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> de_data_0[] = &#123;<span class="hljs-number">0xF7</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x1F</span>&#125;;<br><br>    <span class="hljs-built_in">de_xor</span>(de_data_0, key);<br><br><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> input[] = &#123;<span class="hljs-number">0x89</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x6C</span>&#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> key_1[] = &#123;<span class="hljs-number">0xB8</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x5D</span>&#125;;<br>    <span class="hljs-built_in">xor_de</span>(de_data_0, key_1);<br>    <span class="hljs-built_in">print_state</span>(de_data_0, <span class="hljs-number">36</span>); <br><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;  <br></code></pre></td></tr></table></figure><h2 id="爆破求解"><a href="#爆破求解" class="headerlink" title="爆破求解"></a>爆破求解</h2><p>这是官方wp<br>给出的解法，前提是在看懂算法的情况下还原加密逻辑，省去素数筛部分代码，爆破可见字符</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> enc[] = &#123;<span class="hljs-number">247</span>, <span class="hljs-number">95</span>, <span class="hljs-number">231</span>, <span class="hljs-number">176</span>, <span class="hljs-number">154</span>, <span class="hljs-number">180</span>, <span class="hljs-number">224</span>, <span class="hljs-number">231</span>, <span class="hljs-number">158</span>, <span class="hljs-number">5</span>, <span class="hljs-number">254</span>, <span class="hljs-number">216</span>, <span class="hljs-number">53</span>, <span class="hljs-number">92</span>, <span class="hljs-number">114</span>, <span class="hljs-number">224</span>, <span class="hljs-number">134</span>, <span class="hljs-number">222</span>, <span class="hljs-number">115</span>, <span class="hljs-number">159</span>, <span class="hljs-number">154</span>, <span class="hljs-number">246</span>, <span class="hljs-number">13</span>, <span class="hljs-number">220</span>, <span class="hljs-number">200</span>, <span class="hljs-number">79</span>, <span class="hljs-number">194</span>, <span class="hljs-number">164</span>, <span class="hljs-number">122</span>, <span class="hljs-number">181</span>, <span class="hljs-number">227</span>, <span class="hljs-number">205</span>, <span class="hljs-number">96</span>, <span class="hljs-number">157</span>, <span class="hljs-number">4</span>, <span class="hljs-number">31</span>&#125;;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> rc4_s[<span class="hljs-number">256</span>];<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> rc4_key[] = <span class="hljs-string">&quot;We1c0m3_t0_d^3ctf&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">rc4_init_s</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *s)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; i++) &#123;<br>        s[i] = i;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">rc4_shuffle</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *s, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *key, <span class="hljs-type">int</span> key_len)</span> </span>&#123;<br>    <span class="hljs-type">int</span> j = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; i++) &#123;<br>        j = (j + s[i] + key[i%key_len])%<span class="hljs-number">256</span>;<br>        <span class="hljs-type">int</span> tmp = s[i];<br>        s[i] = s[j];<br>        s[j] = tmp;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">rc4_gen_keystream</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *s, <span class="hljs-type">int</span> len, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *key_stream)</span> </span>&#123;<br>    <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>, cnt = <span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">while</span> (len) &#123;<br>        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>;   <br>        j = (j + s[i]) % <span class="hljs-number">256</span>;<br>        <span class="hljs-type">int</span> tmp = s[i];<br>        s[i] = s[j];<br>        s[j] = tmp;<br>        key_stream[++cnt] = s[(s[i] + s[j]) % <span class="hljs-number">256</span>];<br>        len -= <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> keystream1[<span class="hljs-number">50</span>];<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> keystream[<span class="hljs-number">50</span>];<br>    <span class="hljs-built_in">rc4_init_s</span>(rc4_s);<br>    <span class="hljs-built_in">rc4_shuffle</span>(rc4_s, rc4_key, <span class="hljs-number">17</span>);<br>    <span class="hljs-built_in">rc4_gen_keystream</span>(rc4_s, <span class="hljs-number">36</span>, keystream1);<br>    <span class="hljs-comment">// keystream1: 184, 134, 68, 99, 181, 216, 28, 149, 209, 126, 112, 94, 188, 86, 99, 52, 40, 144, 21, 248, 77, 82, 157, 30, 245, 31, 200, 100, 82, 27, 100, 15, 36, 147, 64, 93</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> primes[] = &#123;<span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>, <span class="hljs-number">23</span>, <span class="hljs-number">29</span>, <span class="hljs-number">31</span>&#125;;<br>    <span class="hljs-built_in">memcpy</span>(rc4_key+<span class="hljs-number">17</span>, primes, <span class="hljs-number">10</span>);<br>    <span class="hljs-built_in">rc4_shuffle</span>(rc4_s, rc4_key, <span class="hljs-number">27</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">17</span>; i++) &#123;<br>        <span class="hljs-built_in">rc4_gen_keystream</span>(rc4_s, <span class="hljs-number">36</span>, keystream);<br>    &#125;<br>    <span class="hljs-comment">// keystream: 53, 75, 160, 96, 8, 80, 165, 241, 51, 151, 178, 19, 203, 76, 13, 207, 163, 124, 87, 83, 226, 169, 101, 78, 14, 199, 122, 15, 253, 181, 158, 180, 51, 249, 97, 211</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">36</span>; i += <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> a1 = <span class="hljs-number">0</span>; a1 &lt; <span class="hljs-number">0xff</span>; a1++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> a2 = <span class="hljs-number">0</span>; a2 &lt; <span class="hljs-number">0xff</span>; a2++) &#123;<br>                <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> a10 = a1;<br>                <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> a20 = a2;<br>                a1 = a1 ^ keystream1[i];<br>                a2 = a2 ^ keystream1[i+<span class="hljs-number">1</span>];<br>                a1 = (a1 + a2) ^ keystream[i];<br>                a2 = (a1 - a2) ^ keystream[i+<span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">if</span> ( a1 == enc[i] &amp;&amp; a2 == enc[i+<span class="hljs-number">1</span>]) &#123;<br>                    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c%c&quot;</span>, a10, a20);<br>                &#125;<br>                a1 = a10;<br>                a2 = a20;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="d3syscall"><a href="#d3syscall" class="headerlink" title="d3syscall"></a>d3syscall</h1><h2 id="涉及知识-1"><a href="#涉及知识-1" class="headerlink" title="涉及知识"></a>涉及知识</h2><ul><li>syscall</li><li>虚拟机</li><li>shell 命令</li></ul><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><p>这道题同样也在 <code>init_array</code> 处进行了修改<br><img src="/./img/D3CTF/e36219783633f2e2ec849d6eeb4e7337a28cf2b9.png"> 断在<br><code>sub_1830</code> 的最后，查看寄存器地址，发现了一些路径字符串<br><img src="/./img/D3CTF/8b4c47c79940f68329cf1050cb772902a66383db.png"></p><p>程序首先从<code>/proc/kallsyms</code>中获取了系统调用表的地址，通过参数传递到内核模块中<br>我们将 <code>my_module</code> 复制过来</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /tmp/my_module /mnt/d/CTF/d^3ctf/d3syscall_attachment2/my_module<br></code></pre></td></tr></table></figure><p>在这里面找到了一些调用号相关的<br><img src="/./img/D3CTF/07ceb7802c1349a2df9bc8a3300322e526988f71.png"><br>如果只看这个的话，还是有点抽象了<img src="/./img/D3CTF/a61ee6ee9dd697d4c636d29aeaa4cd5d1af0565b.png"><br>我们可以通过Linux 自带命令 <code>strace</code> 打印出syscall 调用情况： 先运行程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo ./d3syscall<br></code></pre></td></tr></table></figure><p>查看进程，发现有三个</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ps -ef<br></code></pre></td></tr></table></figure><p><img src="/./img/D3CTF/f17bc54ed41eb2bbdb864a884fabe53c12d1a8b4.png"></p><p>用 <code>strace</code> 查看 <code>./d3syscall</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo strace -p 1467 -o 1.txt<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs shell">read(0, &quot;11111111111111111111111111\n&quot;, 1024) = 27<br>syscall_0x14f(0x1, 0, 0x3131313131313131, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x3131313131313131, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0x1, 0x3131313131313131, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x2, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x4, 0x2, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x51e7647e, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x2, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x2, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0xe0b4140a, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0xe6978f27, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x152(0x1, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x1, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0x1, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x2, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x6, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x4, 0x2, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x53a35337, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x2, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x5, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x2, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x9840294d, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x5eae4751, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x1, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x152(0, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x153(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x3131313131313131, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x3131, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0x1, 0x3131, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x2, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x4, 0x2, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x51e7647e, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x2, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x2, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0xe0b4140a, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0xe6978f27, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x152(0x1, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x1, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0x1, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x2, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x6, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x4, 0x2, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x53a35337, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x2, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x5, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x2, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x9840294d, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x5eae4751, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x1, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x152(0, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x153(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0x1, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x2, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x4, 0x2, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x51e7647e, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x2, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x2, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0xe0b4140a, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0x1, 0xe6978f27, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x152(0x1, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x1, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0x1, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x2, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x6, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x4, 0x2, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x53a35337, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x2, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x5, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x2, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x9840294d, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0, 0x3, 0x1, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x14f(0x1, 0, 0x5eae4751, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x1, 0x3, 0, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0x3, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x152(0, 0x2, 0x3, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x150(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x151(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x153(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>syscall_0x154(0, 0, 0x2, 0xffffffffffffff80, 0, 0x55c3d6f28890) = -1 ENOSYS (Function not implemented)<br>newfstatat(1, &quot;&quot;, &#123;st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0xb), ...&#125;, AT_EMPTY_PATH) = 0<br>unlink(&quot;/tmp/my_module&quot;)                = -1 ENOENT (No such file or directory)<br>delete_module(&quot;my_module&quot;, O_NONBLOCK)  = -1 ENOENT (No such file or directory)<br>write(1, &quot;Congratulations!&quot;, 16)        = 16<br>lseek(0, -1, SEEK_CUR)                  = -1 ESPIPE (Illegal seek)<br>exit_group(0)                           = ?<br>+++ exited with 0 +++<br></code></pre></td></tr></table></figure><p>这样就得到了一个完整的记录 结合上面，分析这几个调用号所代表的含义。</p><p>既然是个虚拟机，至少得有栈和寄存器 我们以此来分析 首先通过特折最明显<code>reset</code> 来确定 寄存器</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">__int64 <span class="hljs-title">reset</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  __int64 result; <span class="hljs-comment">// rax</span><br><br>  result = _fentry__();<br>  reg[<span class="hljs-number">0</span>] = <span class="hljs-number">0LL</span>;<br>  reg[<span class="hljs-number">1</span>] = <span class="hljs-number">0LL</span>;<br>  reg[<span class="hljs-number">2</span>] = <span class="hljs-number">0LL</span>;<br>  reg[<span class="hljs-number">3</span>] = <span class="hljs-number">0LL</span>;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><p>随后通过 check 函数确定 stack</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">void</span> __fastcall <span class="hljs-title">check</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  __int64 v0; <span class="hljs-comment">// rbx</span><br>  <span class="hljs-type">unsigned</span> __int64 v1; <span class="hljs-comment">// rsi</span><br>  __int64 v2; <span class="hljs-comment">// r12</span><br>  <span class="hljs-type">unsigned</span> __int64 v3; <span class="hljs-comment">// [rsp-50h] [rbp-50h]</span><br>  __int64 v4; <span class="hljs-comment">// [rsp-48h] [rbp-48h]</span><br>  __int64 v5; <span class="hljs-comment">// [rsp-40h] [rbp-40h]</span><br>  <span class="hljs-type">unsigned</span> __int64 v6; <span class="hljs-comment">// [rsp-38h] [rbp-38h]</span><br>  __int64 v7; <span class="hljs-comment">// [rsp-30h] [rbp-30h]</span><br>  __int64 v8; <span class="hljs-comment">// [rsp-28h] [rbp-28h]</span><br>  <span class="hljs-type">unsigned</span> __int64 v9; <span class="hljs-comment">// [rsp-20h] [rbp-20h]</span><br>  __int64 v10; <span class="hljs-comment">// [rsp-8h] [rbp-8h] BYREF</span><br><br>  _fentry__();<br>  v0 = <span class="hljs-number">1LL</span>;<br>  v9 = __readgsqword(<span class="hljs-number">0x28</span>u);<br>  v3 = <span class="hljs-number">0xB0800699CB89CC89</span>LL;<br>  v4 = <span class="hljs-number">0x4764FD523FA00B19</span>LL;<br>  v5 = <span class="hljs-number">0x396A7E6DF099D700</span>LL;<br>  v6 = <span class="hljs-number">0xB115D56BCDEAF50A</span>LL;<br>  v7 = <span class="hljs-number">0x2521513C985791F4</span>LL;<br>  v8 = <span class="hljs-number">0xB03C06AF93AD0BE</span>LL;<br>  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )<br>  &#123;<br>    v1 = (<span class="hljs-type">int</span>)v0 - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span> ( v1 &gt; <span class="hljs-number">5</span> )<br>      _ubsan_handle_out_of_bounds(&amp;off_1880, v1);<br>    v2 = *(&amp;v10 + v0 - <span class="hljs-number">10</span>);<br>    <span class="hljs-keyword">if</span> ( (<span class="hljs-type">unsigned</span> __int64)(<span class="hljs-type">int</span>)v0 &gt; <span class="hljs-number">0x27</span> )<br>      _ubsan_handle_out_of_bounds(&amp;off_1860, (<span class="hljs-type">int</span>)v0);<br>    <span class="hljs-keyword">if</span> ( v2 != stack[v0] )                      <span class="hljs-comment">// 比较数据累加时，不可能是对寄存器操作，所以应该是 stack</span><br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">if</span> ( ++v0 == <span class="hljs-number">7</span> )<br>    &#123;<br>      reg[<span class="hljs-number">0</span>] = <span class="hljs-number">0LL</span>;<br>      reg[<span class="hljs-number">1</span>] = <span class="hljs-number">0LL</span>;<br>      reg[<span class="hljs-number">2</span>] = <span class="hljs-number">0LL</span>;<br>      reg[<span class="hljs-number">3</span>] = <span class="hljs-number">0LL</span>;<br>      reg[<span class="hljs-number">5</span>] = <span class="hljs-number">0LL</span>;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>逐条分析之后得到</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp">::v4[<span class="hljs-number">0x14F</span>] = mov;<br>v4[<span class="hljs-number">0x150</span>] = alu;                              <span class="hljs-comment">// 运算器</span><br>v4[<span class="hljs-number">0x151</span>] = push;<br>v4[<span class="hljs-number">0x152</span>] = pop;<br>v4[<span class="hljs-number">0x153</span>] = reset;<br>v4[<span class="hljs-number">0x154</span>] = check;<br></code></pre></td></tr></table></figure><p>写出对应的函数 这里用 python<br>写出这个过程呢，不太一定能一次成功，因为代码量不太多，我们可以尝试先不直接还原代码，而是打印出每个指令，然后逆向分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 全局变量</span><br>reg = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>]<br>stack = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1000</span>)]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">syscall_mov</span>(<span class="hljs-params">a1, a2, a3</span>):<br>    <span class="hljs-keyword">if</span> a1 == <span class="hljs-number">1</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;mov reg[<span class="hljs-subst">&#123;a2&#125;</span>], <span class="hljs-subst">&#123;a3&#125;</span>&#x27;</span> )<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;mov reg[<span class="hljs-subst">&#123;a2&#125;</span>], reg[<span class="hljs-subst">&#123;a3&#125;</span>]&#x27;</span> )<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">syscall_alu</span>(<span class="hljs-params">a1, a2, a3</span>):<br>    <span class="hljs-keyword">if</span> a1 == <span class="hljs-number">1</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;sub reg[<span class="hljs-subst">&#123;a2&#125;</span>], reg[<span class="hljs-subst">&#123;a3&#125;</span>] &#x27;</span>)<br>    <span class="hljs-keyword">elif</span> a1 == <span class="hljs-number">2</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;mul reg[<span class="hljs-subst">&#123;a2&#125;</span>], reg[<span class="hljs-subst">&#123;a3&#125;</span>] &#x27;</span>)<br><br>    <span class="hljs-keyword">elif</span> a1 == <span class="hljs-number">3</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;xor reg[<span class="hljs-subst">&#123;a2&#125;</span>], reg[<span class="hljs-subst">&#123;a3&#125;</span>]&#x27;</span>)<br>    <span class="hljs-keyword">elif</span> a1 == <span class="hljs-number">4</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;shl reg[<span class="hljs-subst">&#123;a2&#125;</span>], reg[<span class="hljs-subst">&#123;a3&#125;</span>]&#x27;</span>)<br>    <span class="hljs-keyword">elif</span> a1 == <span class="hljs-number">5</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;shr reg[<span class="hljs-subst">&#123;a2&#125;</span>], reg[<span class="hljs-subst">&#123;a3&#125;</span>]&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;add reg[<span class="hljs-subst">&#123;a2&#125;</span>], reg[<span class="hljs-subst">&#123;a3&#125;</span>]&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">syscall_push</span>(<span class="hljs-params">a1, a2, a3</span>):<br>    <span class="hljs-keyword">if</span> a1:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;push reg[<span class="hljs-subst">&#123;a2&#125;</span>]&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;push <span class="hljs-subst">&#123;a2&#125;</span>&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">syscall_pop</span>(<span class="hljs-params">a1, a2, a3</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;pop reg[<span class="hljs-subst">&#123;a1&#125;</span>]&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">syscall_reset</span>(<span class="hljs-params">a1, a2, a3</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;reset&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>        reg[i] = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">syscall_check</span>(<span class="hljs-params">a1, a2, a3</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;check&#x27;</span>)<br>    cmp_data = [<span class="hljs-number">0xB0800699CB89CC89</span>, <span class="hljs-number">0x4764FD523FA00B19</span>, <span class="hljs-number">0x396A7E6DF099D700</span>, <span class="hljs-number">0xB115D56BCDEAF50A</span>, <span class="hljs-number">0x2521513C985791F4</span>, <span class="hljs-number">0xB03C06AF93AD0BE</span>]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>        <span class="hljs-keyword">if</span>(cmp_data[i] == stack[i]):<br>            <span class="hljs-keyword">break</span><br>    syscall_reset(a1, a2, a3)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x3837363534333231</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x6867666564636261</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x6867666564636261</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0x4</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x51e7647e</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0xe0b4140a</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0xe6978f27</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_pop(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x6</span>)<br>    syscall_alu(<span class="hljs-number">0x4</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x53a35337</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x5</span>)<br>    syscall_alu(<span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x9840294d</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x5eae4751</span>)<br>    syscall_alu(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_pop(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_reset(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x3132333435363738</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x6162636465666768</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x6162636465666768</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0x4</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x51e7647e</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0xe0b4140a</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0xe6978f27</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_pop(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x6</span>)<br>    syscall_alu(<span class="hljs-number">0x4</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x53a35337</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x5</span>)<br>    syscall_alu(<span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x9840294d</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x5eae4751</span>)<br>    syscall_alu(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_pop(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_reset(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x4847464544434241</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x4142434445464847</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x4142434445464847</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0x4</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x51e7647e</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0xe0b4140a</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0xe6978f27</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_pop(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x6</span>)<br>    syscall_alu(<span class="hljs-number">0x4</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x53a35337</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x5</span>)<br>    syscall_alu(<span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x9840294d</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_mov(<span class="hljs-number">0</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>)<br>    syscall_mov(<span class="hljs-number">0x1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x5eae4751</span>)<br>    syscall_alu(<span class="hljs-number">0x1</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0</span>)<br>    syscall_alu(<span class="hljs-number">0x3</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_pop(<span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>)<br>    syscall_alu(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_push(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_reset(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br>    syscall_check(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x2</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs code">mov reg[0], 4050765991979987505<br>mov reg[1], 7523094288207667809<br>push 1<br>mov reg[2], reg[0]<br>mov reg[1], 3<br>shl reg[2], reg[1]<br>mov reg[1], 1374119038<br>add reg[2], reg[1]<br>mov reg[3], reg[0]<br>mov reg[1], 3<br>mul reg[3], reg[1]<br>mov reg[1], 3769897994<br>add reg[3], reg[1]<br>xor reg[2], reg[3]<br>mov reg[3], reg[0]<br>mov reg[1], 3868692263<br>add reg[3], reg[1]<br>xor reg[2], reg[3]<br>pop reg[1]<br>add reg[1], reg[2]<br>push 1<br>push 0<br>mov reg[2], reg[1]<br>mov reg[0], 6<br>shl reg[2], reg[0]<br>mov reg[0], 1403212599<br>add reg[2], reg[0]<br>mov reg[3], reg[1]<br>mov reg[0], 5<br>mul reg[3], reg[0]<br>mov reg[0], 2554341709<br>add reg[3], reg[0]<br>xor reg[2], reg[3]<br>mov reg[3], reg[1]<br>mov reg[0], 1588479825<br>sub reg[3], reg[0]<br>xor reg[2], reg[3]<br>pop reg[0]<br>add reg[0], reg[2]<br>push 0<br>reset<br>mov reg[0], 3544952156018063160<br>mov reg[1], 7017280452245743464<br>push 1<br>mov reg[2], reg[0]<br>mov reg[1], 3<br>shl reg[2], reg[1]<br>mov reg[1], 1374119038<br>add reg[2], reg[1]<br>mov reg[3], reg[0]<br>mov reg[1], 3<br>mul reg[3], reg[1]<br>mov reg[1], 3769897994<br>add reg[3], reg[1]<br>xor reg[2], reg[3]<br>mov reg[3], reg[0]<br>mov reg[1], 3868692263<br>add reg[3], reg[1]<br>xor reg[2], reg[3]<br>pop reg[1]<br>add reg[1], reg[2]<br>push 1<br>push 0<br>mov reg[2], reg[1]<br>mov reg[0], 6<br>shl reg[2], reg[0]<br>mov reg[0], 1403212599<br>add reg[2], reg[0]<br>mov reg[3], reg[1]<br>mov reg[0], 5<br>mul reg[3], reg[0]<br>mov reg[0], 2554341709<br>add reg[3], reg[0]<br>xor reg[2], reg[3]<br>mov reg[3], reg[1]<br>mov reg[0], 1588479825<br>sub reg[3], reg[0]<br>xor reg[2], reg[3]<br>pop reg[0]<br>add reg[0], reg[2]<br>push 0<br>reset<br>mov reg[0], 5208208757389214273<br>mov reg[1], 4702394921427290183<br>push 1<br>mov reg[2], reg[0]<br>mov reg[1], 3<br>shl reg[2], reg[1]<br>mov reg[1], 1374119038<br>add reg[2], reg[1]<br>reset<br>check<br>reset<br></code></pre></td></tr></table></figure><p>分析后，每次加密是这样的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">b += ((a &lt;&lt; <span class="hljs-number">3</span>) + <span class="hljs-number">1374119038</span>) ^ (a * <span class="hljs-number">3</span> + <span class="hljs-number">3769897994</span>) ^ (a + <span class="hljs-number">3868692263</span>)<br>a += ((b &lt;&lt; <span class="hljs-number">6</span>) + <span class="hljs-number">1403212599</span>) ^ (b * <span class="hljs-number">5</span> + <span class="hljs-number">2554341709</span>) ^ (b - <span class="hljs-number">1588479825</span>)<br></code></pre></td></tr></table></figure><blockquote><p>注意这里的 a b 并不是按顺序来的，而是传参顺序，也就是 b对应 arr[i],<br>a对应arr[i+1]</p></blockquote><h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><p>因为参与 a 加密的b是已经加密的结果，所以解密只需要简单的调换顺序，加号变减号就行了</p><p>用 C++ 会比较好</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">decode</span><span class="hljs-params">(<span class="hljs-type">uint64_t</span> &amp;a, <span class="hljs-type">uint64_t</span> &amp;b)</span></span>&#123;<br>    a -= ((b &lt;&lt; <span class="hljs-number">6</span>) + <span class="hljs-number">1403212599</span>) ^ (b * <span class="hljs-number">5</span> + <span class="hljs-number">2554341709</span>) ^ (b - <span class="hljs-number">1588479825</span>);<br>    b -= ((a &lt;&lt; <span class="hljs-number">3</span>) + <span class="hljs-number">1374119038</span>) ^ (a * <span class="hljs-number">3</span> + <span class="hljs-number">3769897994</span>) ^ (a + <span class="hljs-number">3868692263</span>);<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.8s%.8s&quot;</span>, &amp;a, &amp;b);<br><br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">uint64_t</span> cmp_data[] = &#123;<span class="hljs-number">0xB0800699CB89CC89</span>, <span class="hljs-number">0x4764FD523FA00B19</span>, <span class="hljs-number">0x396A7E6DF099D700</span>, <span class="hljs-number">0xB115D56BCDEAF50A</span>, <span class="hljs-number">0x2521513C985791F4</span>, <span class="hljs-number">0xB03C06AF93AD0BE</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">6</span>; i+=<span class="hljs-number">2</span>)&#123;<br>        <span class="hljs-built_in">decode</span>(cmp_data[i+<span class="hljs-number">1</span>], cmp_data[i]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到 flag</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">d3ctf&#123;cef9b994-2547-4844-ac0d-a097b75806a0&#125;<br></code></pre></td></tr></table></figure><p>还有其他师傅是直接还原整个逻辑，然后用z3进行解题的</p><h1 id="d3recover"><a href="#d3recover" class="headerlink" title="d3recover"></a>d3recover</h1><h2 id="涉及知识-2"><a href="#涉及知识-2" class="headerlink" title="涉及知识"></a>涉及知识</h2><ul><li>符号恢复</li><li>Bindiff</li></ul><h2 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h2><p>给了两个附件 分别用 ida 打开，发现 1.0 是去掉了符号的，而 2.0 保留了符号<br>用 Bindiff 恢复 1.0 的符号 恢复之后，通过字符串关键字 <code>check</code> ，可以找到<br>check 函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><code class="hljs cpp">    <span class="hljs-built_in">Py_XDECREF</span>(Item);<br>    <span class="hljs-built_in">Py_XDECREF</span>(v16);<br>    <span class="hljs-built_in">Py_XDECREF</span>(v17);<br>    _Pyx_AddTraceback(<span class="hljs-string">&quot;d3recover_ver1.check&quot;</span>, v7, v6, v18);<br>    v11 = <span class="hljs-number">0LL</span>;<br>    <span class="hljs-keyword">goto</span> LABEL_61;<br>  &#125;<br>  <span class="hljs-keyword">if</span> ( v19 == <span class="hljs-number">32</span> )<br>  &#123;<br>    Item = _Pyx_PyObject_CallNoArg(&amp;unk_A7B7A0);<br>    <span class="hljs-keyword">if</span> ( !Item )<br>    &#123;<br>      v18 = str_d3recover_ver1_py;<br>      v6 = <span class="hljs-number">32</span>;<br>      v7 = <span class="hljs-number">2109</span>;<br>      <span class="hljs-keyword">goto</span> LABEL_60;<br>    &#125;<br>    v9 = Item;<br>    Item = <span class="hljs-number">0LL</span>;<br>    <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0LL</span>; i &lt;= <span class="hljs-number">31</span>; ++i )<br>    &#123;<br>      Item = _Pyx_PyInt_From_long(i);<br>      <span class="hljs-keyword">if</span> ( !Item )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">33</span>;<br>        v7 = <span class="hljs-number">2122</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      v23 = v10;<br>      v10 = Item;<br>      <span class="hljs-built_in">Py_XDECREF</span>(v23);<br>      Item = _Pyx_PyObject_GetItem(a2, Item);<br>      <span class="hljs-keyword">if</span> ( !Item )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">34</span>;<br>        v7 = <span class="hljs-number">2134</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      <span class="hljs-keyword">if</span> ( (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-built_in">PyType_HasFeature</span>(*(_QWORD *)(Item + <span class="hljs-number">8</span>), <span class="hljs-number">0x10000000</span>LL) )<br>        v2 = (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-built_in">sub_5A374B</span>(Item);<br>      <span class="hljs-keyword">else</span><br>        v2 = <span class="hljs-built_in">sub_5A3D44</span>(Item);<br>      v24 = v2;<br>      <span class="hljs-keyword">if</span> ( v2 == <span class="hljs-number">0xFFFFFFFF</span>LL )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">34</span>;<br>        v7 = <span class="hljs-number">2136</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      <span class="hljs-built_in">Py_DECREF</span>(Item);<br>      Item = <span class="hljs-number">0LL</span>;<br>      <span class="hljs-keyword">if</span> ( (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)_Pyx_PyByteArray_Append(v9, v24 ^ <span class="hljs-number">0x23</span>u) == <span class="hljs-number">-1</span> )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">34</span>;<br>        v7 = <span class="hljs-number">2138</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0LL</span>; j &lt;= <span class="hljs-number">29</span>; ++j )<br>    &#123;<br>      Item = _Pyx_PyInt_From_long(j);<br>      <span class="hljs-keyword">if</span> ( !Item )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">35</span>;<br>        v7 = <span class="hljs-number">2149</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      v22 = v10;<br>      v10 = Item;<br>      <span class="hljs-built_in">Py_XDECREF</span>(v22);<br>      Item = _Pyx_PyObject_GetItem(v9, Item);<br>      <span class="hljs-keyword">if</span> ( !Item )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">36</span>;<br>        v7 = <span class="hljs-number">2161</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      v16 = _Pyx_PyInt_AddObjC(v10, qword_ABC1E8, <span class="hljs-number">2LL</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">0LL</span>);<br>      <span class="hljs-keyword">if</span> ( !v16 )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">36</span>;<br>        v7 = <span class="hljs-number">2163</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      v17 = _Pyx_PyObject_GetItem(v9, v16);<br>      <span class="hljs-keyword">if</span> ( !v17 )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">36</span>;<br>        v7 = <span class="hljs-number">2165</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      <span class="hljs-built_in">Py_DECREF</span>(v16);<br>      v16 = <span class="hljs-built_in">sub_4E0BB0</span>(Item, v17);<br>      <span class="hljs-keyword">if</span> ( !v16 )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">36</span>;<br>        v7 = <span class="hljs-number">2168</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      <span class="hljs-built_in">Py_DECREF</span>(Item);<br>      Item = <span class="hljs-number">0LL</span>;<br>      <span class="hljs-built_in">Py_DECREF</span>(v17);<br>      v17 = _Pyx_PyInt_AndObjC(v16, qword_ABC220, <span class="hljs-number">255LL</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">0LL</span>);<br>      <span class="hljs-keyword">if</span> ( !v17 )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">36</span>;<br>        v7 = <span class="hljs-number">2172</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      <span class="hljs-built_in">Py_DECREF</span>(v16);<br>      v16 = _Pyx_PyInt_XorObjC(v17, qword_ABC218, <span class="hljs-number">84LL</span>, <span class="hljs-number">0LL</span>, <span class="hljs-number">0LL</span>);<br>      <span class="hljs-keyword">if</span> ( !v16 )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">36</span>;<br>        v7 = <span class="hljs-number">2175</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      <span class="hljs-built_in">Py_DECREF</span>(v17);<br>      v17 = <span class="hljs-number">0LL</span>;<br>      <span class="hljs-keyword">if</span> ( (<span class="hljs-type">int</span>)<span class="hljs-built_in">PyObject_SetItem</span>(v9, v10, v16) &lt; <span class="hljs-number">0</span> )<br>      &#123;<br>        v18 = str_d3recover_ver1_py;<br>        v6 = <span class="hljs-number">36</span>;<br>        v7 = <span class="hljs-number">2178</span>;<br>        <span class="hljs-keyword">goto</span> LABEL_60;<br>      &#125;<br>      <span class="hljs-built_in">Py_DECREF</span>(v16);<br>      v16 = <span class="hljs-number">0LL</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> ( *(_QWORD *)(qword_ABC050 + <span class="hljs-number">24</span>) == qword_ABC2A0 )<br>    &#123;<br>      <span class="hljs-keyword">if</span> ( qword_ABC2A8 )<br>      &#123;<br>        <span class="hljs-built_in">Py_INCREF</span>(qword_ABC2A8);<br>        BuiltinName = qword_ABC2A8;<br>      &#125;<br>      <span class="hljs-keyword">else</span><br>      &#123;<br>        BuiltinName = _Pyx_GetBuiltinName(qword_ABC0E0);<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>      BuiltinName = _Pyx__GetModuleGlobalName(qword_ABC0E0, &amp;qword_ABC2A0, &amp;qword_ABC2A8);<br>    &#125;<br>    v17 = BuiltinName;<br>    <span class="hljs-keyword">if</span> ( !BuiltinName )<br>    &#123;<br>      v18 = str_d3recover_ver1_py;<br>      v6 = <span class="hljs-number">37</span>;<br>      v7 = <span class="hljs-number">2189</span>;<br>      <span class="hljs-keyword">goto</span> LABEL_60;<br>    &#125;<br>    v13 = <span class="hljs-number">0LL</span>;<br>    <span class="hljs-keyword">if</span> ( (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-built_in">Py_IS_TYPE</span>(BuiltinName, &amp;unk_A7D100) )<br>    &#123;<br>      v13 = *(_QWORD *)(v17 + <span class="hljs-number">24</span>);<br>      <span class="hljs-keyword">if</span> ( v13 )<br>      &#123;<br>        v20 = *(_QWORD *)(v17 + <span class="hljs-number">16</span>);<br>        <span class="hljs-built_in">Py_INCREF</span>(v13);<br>        <span class="hljs-built_in">Py_INCREF</span>(v20);<br>        v21 = v17;<br>        v17 = v20;<br>        <span class="hljs-built_in">Py_DECREF</span>(v21);<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> ( v13 )<br>      v4 = _Pyx_PyObject_Call2Args(v17, v13, v9);<br>    <span class="hljs-keyword">else</span><br>      v4 = _Pyx_PyObject_CallOneArg(v17, v9);<br>    v16 = v4;<br>    <span class="hljs-built_in">Py_XDECREF</span>(v13);<br>    Item = <span class="hljs-number">0LL</span>;<br>    <span class="hljs-keyword">if</span> ( !v16 )<br>    &#123;<br>      v18 = str_d3recover_ver1_py;<br>      v6 = <span class="hljs-number">37</span>;<br>      v7 = <span class="hljs-number">2203</span>;<br>      <span class="hljs-keyword">goto</span> LABEL_60;<br>    &#125;<br>    <span class="hljs-built_in">Py_DECREF</span>(v17);<br>    v17 = <span class="hljs-number">0LL</span>;<br>    v8 = _Pyx_PyBytes_Equals(v16, qword_ABC0D0, <span class="hljs-number">2LL</span>);<br>    <span class="hljs-keyword">if</span> ( v8 &lt; <span class="hljs-number">0</span> )<br>    &#123;<br>      v18 = str_d3recover_ver1_py;<br>      v6 = <span class="hljs-number">37</span>;<br>      v7 = <span class="hljs-number">2206</span>;<br>      <span class="hljs-keyword">goto</span> LABEL_60;<br>    &#125;<br>    <span class="hljs-built_in">Py_DECREF</span>(v16);<br>    <span class="hljs-built_in">Py_XDECREF</span>(<span class="hljs-number">0LL</span>);<br>    <span class="hljs-keyword">if</span> ( v8 )<br>    &#123;<br>      <span class="hljs-built_in">Py_INCREF</span>(&amp;qword_A7AEA0);<br>      v11 = &amp;qword_A7AEA0;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>      <span class="hljs-built_in">Py_INCREF</span>(&amp;qword_A7AEC0);<br>      v11 = &amp;qword_A7AEC0;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    <span class="hljs-built_in">Py_XDECREF</span>(<span class="hljs-number">0LL</span>);<br>    <span class="hljs-built_in">Py_INCREF</span>(&amp;qword_A7AEC0);<br>    v11 = &amp;qword_A7AEC0;<br>  &#125;<br>LABEL_61:<br>  <span class="hljs-built_in">Py_XDECREF</span>(v9);<br>  <span class="hljs-built_in">Py_XDECREF</span>(v10);<br>  <span class="hljs-keyword">return</span> v11;<br>&#125;<br></code></pre></td></tr></table></figure><p>看起来有点抽象，但是仔细看会发现，操作基本都以符号名的形式呈现了<br><img src="/./img/D3CTF/5aa84c6abc7a25fde348db49ad70c386bb114895.png"></p><p>但是具体形式还是不容易弄清楚，动调一下</p><h2 id="求解"><a href="#求解" class="headerlink" title="求解"></a>求解</h2><p>加密后的正确flag以 base64 的形式存在<br><img src="/./img/D3CTF/862dd2b039dca167c42a9e98e850f33b34563283.png"> 转化后为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">d3 c7 ce ca 3f 84 db b3 b6 b9 80 ea d0 cd 72 fc d8 30 95 db e2 d8 92 08 c1 c6 c5 f4 07 ec 02 5e<br></code></pre></td></tr></table></figure><p>z3 脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">en</span>(<span class="hljs-params">arr</span>):<br>    length = <span class="hljs-number">32</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        arr[i] = arr[i] ^ <span class="hljs-number">0x23</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>):<br>        arr[i] = ((arr[i] + arr[i+<span class="hljs-number">2</span>]) &amp; <span class="hljs-number">0xff</span>) ^ <span class="hljs-number">0x54</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">de</span>(<span class="hljs-params">arr</span>):<br>    flag = [BitVec(<span class="hljs-string">&#x27;flag[%d]&#x27;</span> % i, <span class="hljs-number">8</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>)]<br>    s = Solver()<br>    en(flag)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        s.add(flag[i] == arr[i])<br>    <span class="hljs-keyword">if</span>(s.check() == sat):  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Solver!&quot;</span>)  <br>        result = s.model() <br>        <span class="hljs-built_in">print</span>(result)<br>        <br>    <span class="hljs-keyword">else</span>:  <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No Solver!!&quot;</span>)  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    enflag = <span class="hljs-string">b&#x27;08fOyj+E27O2uYDq0M1y/Ngwldvi2JIIwcbF9AfsAl4=&#x27;</span><br>    dec = base64.b64decode(enflag)<br>    de(dec)<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br><span class="hljs-comment"># flag&#123;y0U_RE_Ma5t3r_0f_R3vocery!&#125;</span><br></code></pre></td></tr></table></figure><h1 id="d3sky"><a href="#d3sky" class="headerlink" title="d3sky"></a>d3sky</h1><h2 id="涉及知识点"><a href="#涉及知识点" class="headerlink" title="涉及知识点"></a>涉及知识点</h2><ul><li>反调试</li><li>RC4</li><li>虚拟机</li><li>idapython</li></ul><h2 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h2><p>Tls 回调里面有反调试</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">void</span> __stdcall <span class="hljs-title">isDebugger__</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> len_key; <span class="hljs-comment">// eax</span><br><br>  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">IsDebuggerPresent</span>() )<br>    aYunzh1junalkai[<span class="hljs-number">5</span>] = <span class="hljs-number">49</span>;<br>  len_key = <span class="hljs-built_in">strlen</span>(<span class="hljs-string">&quot;YunZhiJun&quot;</span>);<br>  <span class="hljs-built_in">RC4_init</span>(sbox, <span class="hljs-string">&quot;YunZhiJun&quot;</span>, len_key);<br>  <span class="hljs-built_in">rc4_crypt</span>(sbox, &amp;data, <span class="hljs-number">74u</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>没有调试的情况下，会更改字符串，而调试的状态下不会更改。<br>然后进行了RC4加密 并且还有除零异常<br><img src="/./img/D3CTF/75a36254413c21ce18069041837586526d93b836.png"> 可以通过<br>attach 绕过</p><p>回调里面的函数加密的结果然后再进行解密 main 函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-type">int</span> len; <span class="hljs-comment">// [esp+0h] [ebp-24h]</span><br>  <span class="hljs-type">int</span> v5; <span class="hljs-comment">// [esp+Ch] [ebp-18h]</span><br>  <span class="hljs-type">unsigned</span> __int16 index_3; <span class="hljs-comment">// [esp+14h] [ebp-10h]</span><br>  <span class="hljs-type">unsigned</span> __int16 index_1; <span class="hljs-comment">// [esp+18h] [ebp-Ch]</span><br>  <span class="hljs-type">unsigned</span> __int16 index_2; <span class="hljs-comment">// [esp+1Ch] [ebp-8h]</span><br>  <span class="hljs-type">unsigned</span> __int16 index_0; <span class="hljs-comment">// [esp+20h] [ebp-4h]</span><br><br>  v5 = <span class="hljs-number">0</span>;<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Welcome to D^3CTF~&quot;</span>);<br>  <span class="hljs-keyword">while</span> ( code[<span class="hljs-number">0</span>] != <span class="hljs-number">0xFFFF</span> )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( code[<span class="hljs-number">2</span>] == <span class="hljs-number">1</span> )<br>    &#123;<br>      code[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>      <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%c&quot;</span>, code[<span class="hljs-number">3</span>]);<br>    &#125;<br>    <span class="hljs-keyword">if</span> ( code[<span class="hljs-number">7</span>] == <span class="hljs-number">1</span> )<br>    &#123;<br>      code[<span class="hljs-number">7</span>] = <span class="hljs-number">0</span>;<br>      <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br>      len = v5++;<br>      <span class="hljs-keyword">if</span> ( len == <span class="hljs-number">36</span> &amp;&amp; code[<span class="hljs-number">8</span>] != <span class="hljs-number">126</span> )<br>      &#123;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Wrong!&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> ( code[<span class="hljs-number">19</span>] )<br>    &#123;<br>      <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Wrong!&quot;</span>);<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    index_0 = code[<span class="hljs-number">0</span>];<br>    <span class="hljs-built_in">rc4_crypt</span>(sbox, &amp;code[code[<span class="hljs-number">0</span>]], <span class="hljs-number">3u</span>);<br>    index_1 = code[index_0];<br>    index_2 = word_22401A[index_0];<br>    index_3 = word_22401C[index_0];<br>    code[<span class="hljs-number">0</span>] = index_0 + <span class="hljs-number">3</span>;<br>    <span class="hljs-built_in">rc4_crypt</span>(sbox, &amp;code[index_0], <span class="hljs-number">3u</span>);<br>    code[index_3] = ~(code[index_1] &amp; code[index_2]);<br>  &#125;<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Right! Your flag is antd3ctf&#123;your input&#125;&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里的 sbox 都是来自回调函数，我们先通过调试得到正确的key，然后得到加密后的数据 RC4 加密</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-comment">// 初始化 S 和 T</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">RC4_init</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* S, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* key, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> len)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> i, j=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> T[<span class="hljs-number">256</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> temp = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; i++)<br>    &#123;<br>        <span class="hljs-comment">// 初始化 S</span><br>        *(S + i) = i;<br>        <span class="hljs-comment">// 密钥轮换</span><br>        *(T + i) = *(key + (i%len)) % <span class="hljs-number">256</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; i++)<br>    &#123;<br>        j = (j + *(S + i) + *(T + i)) % <span class="hljs-number">256</span>;<br>        <span class="hljs-comment">// 进行交换</span><br>        temp = *(S + i);<br>        *(S + i) = *(S + j);<br>        *(S + j) = temp;<br>    &#125;<br>&#125;<br><span class="hljs-comment">// 加密明文</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">RC4_encrypt</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* S, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* data, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> len)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>, t = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> k;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> temp = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; len; k++)<br>    &#123;<br>        <span class="hljs-comment">// 固定方式生成</span><br>        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>;<br>        j = (j + *(S + i)) % <span class="hljs-number">256</span>;<br>        <span class="hljs-comment">// 交换</span><br>        temp = *(S + i);<br>        *(S + i) = *(S + j);<br>        *(S + j) = temp;<br>        <span class="hljs-comment">// 固定方式生成的 t</span><br>        t = (*(S + i) + *(S + j)) % <span class="hljs-number">256</span>;<br>        <span class="hljs-comment">// 异或</span><br>        *(data + k) ^= *(S + t);<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">numout</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* data, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> len)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len; i++)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x%02X, &quot;</span>, *(data + i));<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> **argv)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">// 初始化向量</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> S[<span class="hljs-number">256</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br>    <span class="hljs-comment">// 密钥</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> key[<span class="hljs-number">256</span>] = <span class="hljs-string">&quot;YunZh1JunAlkaid&quot;</span>;<br>    <span class="hljs-comment">// 明文</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> data_en[<span class="hljs-number">512</span>] = &#123; <span class="hljs-number">0x009E</span>, <span class="hljs-number">0x0028</span>, <span class="hljs-number">0x00F5</span>, <span class="hljs-number">0x0075</span>, <span class="hljs-number">0x0073</span>, <span class="hljs-number">0x0073</span>, <span class="hljs-number">0x0030</span>, <span class="hljs-number">0x007E</span>, <span class="hljs-number">0x0048</span>, <span class="hljs-number">0x0048</span>, <span class="hljs-number">0x00F2</span>, <span class="hljs-number">0x002F</span>, <span class="hljs-number">0x003D</span>, <span class="hljs-number">0x00EC</span>, <span class="hljs-number">0x0001</span>, <span class="hljs-number">0x0026</span>, <span class="hljs-number">0x003E</span>, <span class="hljs-number">0x00CD</span>, <span class="hljs-number">0x0082</span>, <span class="hljs-number">0x00AD</span>, <span class="hljs-number">0x00B1</span>, <span class="hljs-number">0x00D1</span>, <span class="hljs-number">0x0036</span>, <span class="hljs-number">0x00D2</span>, <span class="hljs-number">0x00B4</span>, <span class="hljs-number">0x00E5</span>, <span class="hljs-number">0x00E8</span>, <span class="hljs-number">0x004C</span>, <span class="hljs-number">0x003D</span>, <span class="hljs-number">0x000C</span>, <span class="hljs-number">0x0073</span>, <span class="hljs-number">0x00FD</span>, <span class="hljs-number">0x0059</span>, <span class="hljs-number">0x00A7</span>, <span class="hljs-number">0x0048</span>, <span class="hljs-number">0x0093</span>, <span class="hljs-number">0x00FD</span>, <span class="hljs-number">0x0006</span>, <span class="hljs-number">0x00E0</span>, <span class="hljs-number">0x0044</span>, <span class="hljs-number">0x0048</span>, <span class="hljs-number">0x0071</span>, <span class="hljs-number">0x0094</span>, <span class="hljs-number">0x004A</span>, <span class="hljs-number">0x008E</span>, <span class="hljs-number">0x00A4</span>, <span class="hljs-number">0x0036</span>, <span class="hljs-number">0x0091</span>, <span class="hljs-number">0x0023</span>, <span class="hljs-number">0x00EE</span>, <span class="hljs-number">0x0068</span>, <span class="hljs-number">0x00C1</span>, <span class="hljs-number">0x005D</span>, <span class="hljs-number">0x000B</span>, <span class="hljs-number">0x004D</span>, <span class="hljs-number">0x001A</span>, <span class="hljs-number">0x0074</span>, <span class="hljs-number">0x0083</span>, <span class="hljs-number">0x0051</span>, <span class="hljs-number">0x0052</span>, <span class="hljs-number">0x00EE</span>, <span class="hljs-number">0x00FE</span>, <span class="hljs-number">0x0011</span>, <span class="hljs-number">0x00A2</span>, <span class="hljs-number">0x00A1</span>, <span class="hljs-number">0x0064</span>, <span class="hljs-number">0x00BD</span>, <span class="hljs-number">0x0098</span>, <span class="hljs-number">0x004D</span>, <span class="hljs-number">0x00B9</span>, <span class="hljs-number">0x0097</span>, <span class="hljs-number">0x0045</span>, <span class="hljs-number">0x00E6</span>, <span class="hljs-number">0x00F7</span> &#125;;<br>    <span class="hljs-comment">// 明文长度</span><br>    <span class="hljs-comment">// unsigned int len_en = strlen(data_en);</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> len_en = <span class="hljs-number">74</span>;<br>    <span class="hljs-comment">// 密钥长度</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> len_k = <span class="hljs-number">15</span>;<br>    <span class="hljs-comment">// unsigned int len_k = strlen(key);</span><br>    <span class="hljs-comment">// 加密</span><br>    <span class="hljs-built_in">RC4_init</span>(S, (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>*)key, len_k);<br>    <span class="hljs-built_in">RC4_encrypt</span>(S, (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>*)data_en, len_en);<br>    <span class="hljs-built_in">numout</span>((<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>*)data_en, len_en);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs data">0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x0B, 0x6D, 0x0F, 0x03, 0x32, 0x42, 0x1D, 0x2B, 0x43, 0x78, 0x43, 0x73, 0x30, 0x2B, 0x4E, 0x63, 0x48, 0x77, 0x2E, 0x32, 0x39, 0x1A, 0x12, 0x71, 0x7A, 0x42, 0x17, 0x45, 0x72, 0x56, 0x0C, 0x5C, 0x4A, 0x62, 0x53, 0x33<br>length = <br></code></pre></td></tr></table></figure><p>尝试复现这个加密，发现有一些数据莫名其妙的不对，并且能够调试，于是尝试用idapython 来进行这个打桩log 的事</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> idc<br><span class="hljs-keyword">import</span> ida_dbg<br><span class="hljs-keyword">import</span> idaapi<br><span class="hljs-comment"># 断点</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">bpt</span>(<span class="hljs-params">arr</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(arr)):<br>        idc.add_bpt(arr[i])<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read_var</span>(<span class="hljs-params">addr, reg</span>):<br>    <span class="hljs-comment"># 运行到 addr 处</span><br>    idc.run_to(addr)<br>    idc.wait_for_next_event(ida_dbg.WFNE_SUSP, -<span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># 得到 reg 的值</span><br>    <span class="hljs-keyword">return</span> idc.get_reg_value(reg) &amp; <span class="hljs-number">0xffff</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_var</span>(<span class="hljs-params">addr, reg</span>):<br>    idc.run_to(addr)<br>    idc.wait_for_next_event(ida_dbg.WFNE_SUSP, -<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">return</span> idc.get_reg_value(reg)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">bin_log</span>(<span class="hljs-params">base_addr</span>):<br>    index_0 = read_var(base_addr + <span class="hljs-number">0x15A0</span>, <span class="hljs-string">&#x27;eax&#x27;</span>)<br>    index_1 = read_var(base_addr + <span class="hljs-number">0x15CB</span>, <span class="hljs-string">&#x27;ecx&#x27;</span>)<br>    index_2 = read_var(base_addr + <span class="hljs-number">0x15DB</span>, <span class="hljs-string">&#x27;eax&#x27;</span>)<br>    index_3 = read_var(base_addr + <span class="hljs-number">0x15EB</span>, <span class="hljs-string">&#x27;edx&#x27;</span>)<br>    var_0   = read_var(base_addr + <span class="hljs-number">0x1638</span>, <span class="hljs-string">&#x27;eax&#x27;</span>)<br>    var_1 = idc.get_reg_value(<span class="hljs-string">&#x27;edx&#x27;</span>) &amp; <span class="hljs-number">0xffff</span><br>    var_2   = read_var(base_addr + <span class="hljs-number">0x163c</span>, <span class="hljs-string">&#x27;eax&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(index_0) + <span class="hljs-string">&#x27;:   &#x27;</span> + <span class="hljs-string">&#x27;mem[&#x27;</span> + <span class="hljs-built_in">hex</span>(index_3) +<span class="hljs-string">&#x27;] = ~&#x27;</span> + <span class="hljs-string">&#x27; (mem[&#x27;</span> + <span class="hljs-built_in">hex</span>(index_1) + <span class="hljs-string">&#x27;] &amp; mem[&#x27;</span> + <span class="hljs-built_in">hex</span>(index_2) + <span class="hljs-string">&#x27;])&#x27;</span> )<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\t &#x27;</span> + <span class="hljs-built_in">hex</span>(var_2) + <span class="hljs-string">&#x27; = ~(&#x27;</span> + <span class="hljs-built_in">hex</span>(var_0) + <span class="hljs-string">&#x27; &amp; &#x27;</span> + <span class="hljs-built_in">hex</span>(var_1) + <span class="hljs-string">&#x27;)&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-comment"># 获取基址</span><br>    base_addr = idaapi.get_imagebase()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;base_addr= &#x27;</span> + <span class="hljs-built_in">hex</span>(base_addr))<br>    <span class="hljs-comment"># 打上断点</span><br>    bpt_arr= [base_addr+<span class="hljs-number">0x1578</span>, base_addr + <span class="hljs-number">0x15A0</span>, base_addr + <span class="hljs-number">0x15CB</span>, base_addr + <span class="hljs-number">0x15DB</span>, base_addr + <span class="hljs-number">0x15EB</span>, base_addr + <span class="hljs-number">0x1638</span>, base_addr + <span class="hljs-number">0x163c</span>]<br>    bpt(bpt_arr)<br>    flag = get_var(base_addr + <span class="hljs-number">0x1578</span>, <span class="hljs-string">&#x27;eax&#x27;</span>)<br>    <span class="hljs-keyword">while</span>(flag == <span class="hljs-number">0</span>):<br>        bin_log(base_addr)<br>        flag = get_var(base_addr + <span class="hljs-number">0x1578</span>, <span class="hljs-string">&#x27;eax&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><code class="hljs log">// 1<br>0x63:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x66:   mem[0xad4] = ~ mem[0x7] &amp; mem[0x7]<br>0x69:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x6c:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 2<br>0x6f:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x72:   mem[0xad5] = ~ mem[0x7] &amp; mem[0x7]<br>0x75:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x78:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 3<br>0x7b:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x7e:   mem[0xad6] = ~ mem[0x7] &amp; mem[0x7]<br>0x81:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x84:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 4<br>0x87:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x8a:   mem[0xad7] = ~ mem[0x7] &amp; mem[0x7]<br>0x8d:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x90:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 5<br>0x93:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x96:   mem[0xad8] = ~ mem[0x7] &amp; mem[0x7]<br>0x99:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x9c:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 6<br>0x9f:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0xa2:   mem[0xad9] = ~ mem[0x7] &amp; mem[0x7]<br>0xa5:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0xa8:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 7<br>0xab:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0xae:   mem[0xada] = ~ mem[0x7] &amp; mem[0x7]<br>0xb1:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0xb4:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 8<br>0xb7:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0xba:   mem[0xadb] = ~ mem[0x7] &amp; mem[0x7]<br>0xbd:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0xc0:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 9<br>0xc3:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0xc6:   mem[0xadc] = ~ mem[0x7] &amp; mem[0x7]<br>0xc9:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0xcc:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 9<br>0xcf:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0xd2:   mem[0xadd] = ~ mem[0x7] &amp; mem[0x7]<br>0xd5:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0xd8:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 10<br>0xdb:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0xde:   mem[0xade] = ~ mem[0x7] &amp; mem[0x7]<br>0xe1:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0xe4:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 11<br>0xe7:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0xea:   mem[0xadf] = ~ mem[0x7] &amp; mem[0x7]<br>0xed:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0xf0:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 12<br>0xf3:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0xf6:   mem[0xae0] = ~ mem[0x7] &amp; mem[0x7]<br>0xf9:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0xfc:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 13<br>0xff:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x102:   mem[0xae1] = ~ mem[0x7] &amp; mem[0x7]<br>0x105:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x108:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 14<br>0x10b:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x10e:   mem[0xae2] = ~ mem[0x7] &amp; mem[0x7]<br>0x111:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x114:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 15<br>0x117:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x11a:   mem[0xae3] = ~ mem[0x7] &amp; mem[0x7]<br>0x11d:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x120:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 16<br>0x123:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x126:   mem[0xae4] = ~ mem[0x7] &amp; mem[0x7]<br>0x129:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x12c:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 17<br>0x12f:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x132:   mem[0xae5] = ~ mem[0x7] &amp; mem[0x7]<br>0x135:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x138:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 18<br>0x13b:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x13e:   mem[0xae6] = ~ mem[0x7] &amp; mem[0x7]<br>0x141:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x144:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 19<br>0x147:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x14a:   mem[0xae7] = ~ mem[0x7] &amp; mem[0x7]<br>0x14d:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x150:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 20<br>0x153:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x156:   mem[0xae8] = ~ mem[0x7] &amp; mem[0x7]<br>0x159:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x15c:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 21<br>0x15f:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x162:   mem[0xae9] = ~ mem[0x7] &amp; mem[0x7]<br>0x165:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x168:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 22<br>0x16b:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x16e:   mem[0xaea] = ~ mem[0x7] &amp; mem[0x7]<br>0x171:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x174:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 23<br>0x177:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x17a:   mem[0xaeb] = ~ mem[0x7] &amp; mem[0x7]<br>0x17d:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x180:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 24<br>0x183:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x186:   mem[0xaec] = ~ mem[0x7] &amp; mem[0x7]<br>0x189:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x18c:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 25<br>0x18f:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x192:   mem[0xaed] = ~ mem[0x7] &amp; mem[0x7]<br>0x195:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x198:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 26<br>0x19b:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x19e:   mem[0xaee] = ~ mem[0x7] &amp; mem[0x7]<br>0x1a1:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x1a4:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 27<br>0x1a7:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x1aa:   mem[0xaef] = ~ mem[0x7] &amp; mem[0x7]<br>0x1ad:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x1b0:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 28<br>0x1b3:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x1b6:   mem[0xaf0] = ~ mem[0x7] &amp; mem[0x7]<br>0x1b9:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x1bc:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 29<br>0x1bf:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x1c2:   mem[0xaf1] = ~ mem[0x7] &amp; mem[0x7]<br>0x1c5:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x1c8:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 30<br>0x1cb:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x1ce:   mem[0xaf2] = ~ mem[0x7] &amp; mem[0x7]<br>0x1d1:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x1d4:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 31<br>0x1d7:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x1da:   mem[0xaf3] = ~ mem[0x7] &amp; mem[0x7]<br>0x1dd:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x1e0:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 32<br>0x1e3:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x1e6:   mem[0xaf4] = ~ mem[0x7] &amp; mem[0x7]<br>0x1e9:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x1ec:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 33<br>0x1ef:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x1f2:   mem[0xaf5] = ~ mem[0x7] &amp; mem[0x7]<br>0x1f5:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x1f8:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 34<br>0x1fb:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x1fe:   mem[0xaf6] = ~ mem[0x7] &amp; mem[0x7]<br>0x201:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x204:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 35<br>0x207:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x20a:   mem[0xaf7] = ~ mem[0x7] &amp; mem[0x7]<br>0x20d:   mem[0xb] = ~ mem[0x14] &amp; mem[0x14]<br>0x210:   mem[0x7] = ~ mem[0xb] &amp; mem[0xb]<br><br>// 36<br>0x213:   mem[0x7] = ~ mem[0x8] &amp; mem[0x8]<br>0x216:   mem[0xaf8] = ~ mem[0x7] &amp; mem[0x7]<br><br>// <br>0x219:   mem[0xb] = ~ mem[0xad4] &amp; mem[0xad4]<br>0x21c:   mem[0xb] = ~ mem[0xb] &amp; mem[0xad5]<br>0x21f:   mem[0xc] = ~ mem[0xad5] &amp; mem[0xad5]<br>0x222:   mem[0xc] = ~ mem[0xc] &amp; mem[0xad4]<br>0x225:   mem[0x11] = ~ mem[0xb] &amp; mem[0xc]<br><br>0x228:   mem[0xb] = ~ mem[0xad6] &amp; mem[0xad6]<br>0x22b:   mem[0xb] = ~ mem[0xb] &amp; mem[0xad7]<br>0x22e:   mem[0xc] = ~ mem[0xad7] &amp; mem[0xad7]<br>0x231:   mem[0xc] = ~ mem[0xc] &amp; mem[0xad6]<br>0x234:   mem[0x12] = ~ mem[0xb] &amp; mem[0xc]<br>0x237:   mem[0xb] = ~ mem[0x11] &amp; mem[0x11]<br>0x23a:   mem[0xb] = ~ mem[0xb] &amp; mem[0x12]<br>0x23d:   mem[0xc] = ~ mem[0x12] &amp; mem[0x12]<br>0x240:   mem[0xc] = ~ mem[0xc] &amp; mem[0x11]<br>0x243:   mem[0x12] = ~ mem[0xb] &amp; mem[0xc]<br>0x246:   mem[0xb] = ~ mem[0xaf9] &amp; mem[0xaf9]<br>0x249:   mem[0xb] = ~ mem[0xb] &amp; mem[0x12]<br>0x24c:   mem[0xc] = ~ mem[0x12] &amp; mem[0x12]<br>0x24f:   mem[0xc] = ~ mem[0xc] &amp; mem[0xaf9]<br>0x252:   mem[0x13] = ~ mem[0xb] &amp; mem[0xc]<br></code></pre></td></tr></table></figure><p>最后这段就是加密了，但是不完整，因为这里有一个验证，我们并没有通过验证。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">0x219</span>:   mem[<span class="hljs-number">0xb</span>] = ~ mem[<span class="hljs-number">0xad4</span>] &amp; mem[<span class="hljs-number">0xad4</span>]<br><span class="hljs-number">0x21c</span>:   mem[<span class="hljs-number">0xb</span>] = ~ mem[<span class="hljs-number">0xb</span>] &amp; mem[<span class="hljs-number">0xad5</span>]<br><span class="hljs-number">0x21f</span>:   mem[<span class="hljs-number">0xc</span>] = ~ mem[<span class="hljs-number">0xad5</span>] &amp; mem[<span class="hljs-number">0xad5</span>]<br><span class="hljs-number">0x222</span>:   mem[<span class="hljs-number">0xc</span>] = ~ mem[<span class="hljs-number">0xc</span>] &amp; mem[<span class="hljs-number">0xad4</span>]<br><span class="hljs-number">0x225</span>:   mem[<span class="hljs-number">0x11</span>] = ~ mem[<span class="hljs-number">0xb</span>] &amp; mem[<span class="hljs-number">0xc</span>]<br></code></pre></td></tr></table></figure><p>加密基本上都是这样的形式，略加分析，这其实实现的就是一个异或操作，上述等价于</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">mem[<span class="hljs-number">0x11</span>] = mem[<span class="hljs-number">0xad4</span>] ^ mem[<span class="hljs-number">0xad5</span>]<br></code></pre></td></tr></table></figure><p>多试几次，就可以得到正向加密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">delta = [<span class="hljs-number">0x24</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x33</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(flag)):<br>    m = flag[i % <span class="hljs-number">37</span>] ^ flag[(i+<span class="hljs-number">1</span>) % <span class="hljs-number">37</span>]<br>    n = flag[(i+<span class="hljs-number">2</span>) % <span class="hljs-number">37</span>] ^ flag[(i+<span class="hljs-number">3</span>) % <span class="hljs-number">37</span>]<br>    s.add((m ^ n) == delta[i])<br></code></pre></td></tr></table></figure><p>其中 delta 为 RC4 加密后的结果（除去所有0的结果） 其中 第37个字符确定为<code>~</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span> ( len == <span class="hljs-number">36</span> &amp;&amp; code[<span class="hljs-number">8</span>] != <span class="hljs-number">126</span> )<br></code></pre></td></tr></table></figure><h2 id="求解-1"><a href="#求解-1" class="headerlink" title="求解"></a>求解</h2><p>正向基本明确了，现在就可以正向解密了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br>flag = [BitVec(<span class="hljs-string">&#x27;flag%i&#x27;</span> % i, <span class="hljs-number">8</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">37</span>)]<br>s = Solver()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag)):<br>    s.add(flag[i] &gt;= <span class="hljs-number">33</span>)<br>    s.add(flag[i] &lt;= <span class="hljs-number">126</span>)<br>s.add(flag[<span class="hljs-number">36</span>] == <span class="hljs-number">126</span>)<br>delta = [<span class="hljs-number">0x24</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x33</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(flag)):<br>    m = flag[i % <span class="hljs-number">37</span>] ^ flag[(i+<span class="hljs-number">1</span>) % <span class="hljs-number">37</span>]<br>    n = flag[(i+<span class="hljs-number">2</span>) % <span class="hljs-number">37</span>] ^ flag[(i+<span class="hljs-number">3</span>) % <span class="hljs-number">37</span>]<br>    s.add((m ^ n) == delta[i])<br><br><span class="hljs-keyword">if</span>(s.check() == sat):  <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Solver!&quot;</span>)  <br>    result = s.model()  <br>    res = [<span class="hljs-built_in">chr</span>(result[flag[i]].as_long()) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">37</span>)] <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(res))<br><span class="hljs-keyword">else</span>:  <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No Solver!!&quot;</span>)  <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
